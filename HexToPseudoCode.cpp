#include <iostream>
#include <sstream>

#include "UPKUtils.h"
#include "UToken.h"
#include "TextUtils.h"

using namespace std;

int main(int argN, char* argV[])
{
    //cout << "HexToPseudoCode" << endl;

    if (argN < 3 || argN > 4)
    {
        cerr << "Usage: HexToPseudoCode UnpackedResourceFile.upk ObjectName [/d]" << endl;
        return 1;
    }

    UPKUtils package(argV[1]);

    UPKReadErrors err = package.GetError();

    if (err != UPKReadErrors::NoErrors)
    {
        cerr << "Error reading package:\n" << FormatReadErrors(err);
        if (package.IsCompressed())
            cerr << "Compression flags:\n" << FormatCompressionFlags(package.GetCompressionFlags());
        return 1;
    }

    string NameToFind = argV[2];

    //cout << "Object to find: " << NameToFind << endl;

    UObjectReference ObjRef = package.FindObject(NameToFind, false);

    if (ObjRef == 0)
    {
        cerr << "Unable to find object entry by name " << NameToFind << endl;
        return 1;
    }
    if (ObjRef > 0 && argN == 4 && string(argV[3]) == "/d")
    {
        package.SaveExportData((uint32_t)ObjRef);
    }
    if (ObjRef > 0)
    {
        //cout << "Found Export Object:\n" << package.FormatExport(ObjRef, true);
    }
    else
    {
        //cout << "Found Import Object:\n" << package.FormatImport(-ObjRef, true);
    }

    if (ObjRef <= 0 || (package.GetExportEntry(ObjRef).Type != "Function" && package.GetExportEntry(ObjRef).Type != "State"))
    {
        cerr << "Object is not a Function nor a State, can not convert to pseudo-code!\n";
        return 1;
    }

    //cout << "Attempting deserialization:\n";

    vector<char> ObjData = package.GetExportData(ObjRef);
    stringstream stream;
    stream.write(ObjData.data(), ObjData.size());
    size_t ScrPos = package.GetScriptRelOffset(ObjRef);
    stream.seekg(ScrPos);

    UScriptCode ScrCode;
    string PseudoCode = ScrCode.Deserialize(stream, package);
    cout << "//This script was generated by HexToPseudoCode decompiler for use with PatchUPK/PatcherGUI tool\n"
         << "UPK_FILE = " << GetFilename(argV[1]) << "\n"
         << "OBJECT = " << NameToFind << " : AUTO\n"
         << "[REPLACEMENT_CODE]\n"
         << PseudoCode;

    return 0;
}

